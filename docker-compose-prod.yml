version: "3"

services:
  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_DB: $POSTGRES_DB
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - db

  backend:
    image: backend
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - 443
      - 80
    depends_on:
      - db
    environment:
      - ConnectionStrings__DatabaseConnection=$ConnectionStrings__DatabaseConnection
      - ConnectionStrings__DomainConnection=$ConnectionStrings__DomainConnection
    networks:
      - reverse_proxy
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.back.rule=Host(`api.$DOMAIN_NAME`)"
      - "traefik.http.services.back.loadbalancer.server.port=80"
      - "traefik.http.routers.back.entrypoints=websecure"
      - "traefik.http.routers.back.tls.certresolver=mvallew"

  frontend:
    image: frontend
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - backend
    environment:
      - API_URL=$API_URL
      - ENV=prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=Host(`$DOMAIN_NAME`)"
      - "traefik.http.services.front.loadbalancer.server.port=80"
      - "traefik.http.routers.front.entrypoints=websecure"
      - "traefik.http.routers.front.tls.certresolver=mvallew"
    networks:
      - reverse_proxy

volumes:
  postgres-data:

networks:
  db:
  reverse_proxy:
    name: traefik
    external: true
